@model IEnumerable<CalendarWebAppPrototype.Models.MyEvent>

@{
    ViewBag.Title = "Events";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Calendar Prototype</h2>

@if (ViewBag.ErrorMessage == "AuthorizationRequired")
{
    <p>Failed to read your contacts. Click @Html.ActionLink("here", "RefreshSession", "Account", new { redirect = "Calendar" }, null) to sign-in or @Html.ActionLink("here", "ConsentApp", "Account", new { redirect = "Calendar", resource = ViewBag.ResourceId }, null) to consent the app and try again.</p>
}
else
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Subject)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Start)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.End)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Organizer.EmailAddress.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Attendees)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Subject)
                </td>    
                <td>
                    @item.Start.ToLocalTime().DateTime.ToString("yyyy-MM-dd hh:mm tt")
                </td>    
                <td>
                    @item.End.ToLocalTime().DateTime.ToString("yyyy-MM-dd hh:mm tt")
                </td>  
                <td>
                    @Html.DisplayFor(modelItem => item.Organizer.EmailAddress.Name)
                </td>  
                <td>
                    @item.GetAttendeeList()
                </td>  
                <td>
                    @Html.DisplayFor(modelItem => item.Location.DisplayName)
                </td>             
            </tr>
        }
             

    </table>
    if (!string.IsNullOrEmpty((string)ViewData["nextLink"]))
    {
       @Html.ActionLink("Next page", "Events", "Calendar", new { nextLink = ViewData["nextLink"] }, null);
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}